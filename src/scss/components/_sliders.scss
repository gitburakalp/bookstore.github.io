$mw: calc(100% - ((1.9rem + 3.7rem + 2.6rem) * 2));

[class*='-slider-block'] {
  position: relative;

  @include media-breakpoint-up(md) {
    > [class*='-slider']:not([class*='--standart']) {
      max-width: $mw;
    }
  }
}

.slider-controls {
  @include media-breakpoint-down(sm) {
    display: none;
  }

  position: absolute;
  top: 50%;
  z-index: 9;
  font-size: 3.7rem;
  transform: translateY(-50%);
  cursor: pointer;

  &[class*=disabled] {
    opacity: 0.35;
  }

  &--prev {
    @extend .slider-controls;

    left: 2.6rem;

    &-white {
      @extend .slider-controls--prev;
      
      color: $colors--white;
      text-shadow: 1px 1px 2px rgba($colors--black-two, 0.35);
  
      top: unset;
      bottom: 23%;
    }
  }

  &--next {
    @extend .slider-controls;

    right: 2.6rem;

    &-white {
      @extend .slider-controls--next;
      
      color: $colors--white;
      text-shadow: 1px 1px 2px rgba($colors--black-two, 0.35);
  
      top: unset;
      bottom: 23%;
    }
  }

  
}

[class*='-slider']:not([class*='-slider-block']) {
  @extend %slider-container;

  &[class*='--fade'] {
    > *:nth-child(1) > * {
      pointer-events: none;
      transition-property: opacity;

      &[class*='--active'] {
        pointer-events: auto;
      }
    }
  }

  &--vertical {
    flex-direction: column;
  }

  > [class*='-wrapper'] {
    @extend %slider-wrapper;

    > [class*='-slide'] {
      @extend %slider-slide;

      @for $i from 1 through $repeat {
        &:nth-child(#{length($bgColors)}n + #{$i}) {
          .cards {
            background: nth($bgColors, random(length($colors)));
          }
        }
      }
    }
  }
}

@include media-breakpoint-down(sm) {
  .category {
    &-block {
      margin-left: auto;
      margin-right: auto;
      position: relative;
      overflow: hidden;
      list-style: none;
      padding: 0;
      z-index: 1;

      width: 100%;
    }

    &-wrapper {
      position: relative;
      width: 100%;
      height: 100%;
      z-index: 1;
      display: flex;
      transition-property: transform;
      box-sizing: content-box;
      transform: translate3d(0px, 0, 0);
    }

    &-row {
      flex-shrink: 0;
      width: 100%;
      height: 100%;
      position: relative;
      transition-property: transform;

      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;

      @for $i from 1 through $repeat {
        &:nth-child(#{length($bgColors)}n + #{$i}) {
          background: nth($bgColors, random(length($colors)));
        }
      }

      border-radius: 1rem;
      height: 200px;

      .title-block {
        position: absolute;
        left: 50%;
        bottom: 1rem;
        transform: translate(-50%);
        min-width: 85%;
        text-align: center;
        z-index: 1;

        + * {
          margin-top: 0;
          margin-bottom: 2rem;
        }

        .title {
          font-size: 1.4rem;
          color: $colors--white;
          text-shadow: 1px 1px 2px rgba($colors--black-two, 0.35);
        }

        .description {
          display: none;
        }
      }

      .books {
        position: relative;

        &-wrapper {
          position: relative;
          display: flex;
          flex-flow: no-wrap;
          max-width: 90%;
          overflow: hidden;
          margin: 0  auto;

          > * {
            flex: 0 0 calc(100% / 3);
            width: 100%;
            max-width: calc(100% / 3);
            text-align: center;
          }
        }

        &-block {
          &:not(:nth-child(2)) {
            transform: scale(0.8);
          }
        }
      }
    }
  }
}

.category {
  &-row {
    @include media-breakpoint-up(md) {
      position: relative;
      margin-top: 3rem;
      padding-bottom: 6.2rem;

      &:after {
        content: "";
        position: absolute;
        bottom: 0.9rem;
        left: 0;
        right: 0;
        height: 6.2rem;
        background-image: url($storageSrc + "svg/bg-shelf.png")
      }

      @for $i from 1 through $repeat {
        &:nth-child(#{length($bgColors)}n + #{$i}) {

          &:before {
            content: "";
            position: absolute;
            bottom: 4rem;
            left: 0;
            right: 0;
            height: 114px;
            background: nth($bgColors, random(length($colors)));
          }
        }
      }

      
    }
  }
}

.books {
  &-block {

    text-align: center;

    @include media-breakpoint-up(md) {
      picture {
        position: relative;
        display: inline-block;
        height: 100%;
  
        &::before {
          content: "";
          position: absolute;
          bottom: 0;
          top: 0;
          left: 0;
          right: 0;
          opacity: 0.83;
          background-image: linear-gradient(to right, #dedede 0%, rgba(92, 90, 90, 0.99) 0%, #bcb4b4 3%, #b4adad 4%, rgba(201, 195, 195, 0.77) 7%, rgba(234, 234, 234, 0.7) 9%, rgba(245, 245, 245, 0.11) 67%);
        }
      }
    }

    

    img {
      @include media-breakpoint-up(md) {
        width: 120px;
        height: 180px;
        object-fit: cover;
      }
    }
  }
}