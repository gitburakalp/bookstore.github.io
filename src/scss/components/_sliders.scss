$mw: calc(100% - ((1.9rem + 3.7rem + 2.6rem) * 2));

[class*='-slider-block'] {
  position: relative;

  @include media-breakpoint-up(md) {
    > [class*='-slider']:not([class*='--standart']) {
      max-width: $mw;
    }
  }
}

.slider-controls {
  @include media-breakpoint-down(sm) {
    display: none;
  }

  position: absolute;
  top: 50%;
  z-index: 9;
  font-size: 3.7rem;
  transform: translateY(-50%);
  cursor: pointer;

  &[class*='disabled'] {
    opacity: 0.35;
  }

  &--prev {
    @extend .slider-controls;

    left: 2.6rem;

    &-white {
      @extend .slider-controls--prev;

      color: $colors--white;
      text-shadow: 1px 1px 2px rgba($colors--black-two, 0.35);
    }
  }

  &--next {
    @extend .slider-controls;

    right: 2.6rem;

    &-white {
      @extend .slider-controls--next;

      color: $colors--white;
      text-shadow: 1px 1px 2px rgba($colors--black-two, 0.35);
    }
  }
}

[class*='-slider']:not([class*='-slider-block']):not([class*='ui-slider']) {
  @extend %slider-container;

  &[class*='--fade'] {
    > *:nth-child(1) > * {
      pointer-events: none;
      transition-property: opacity;

      &[class*='--active'] {
        pointer-events: auto;
      }
    }
  }

  &--vertical {
    flex-direction: column;
  }

  > [class*='-wrapper'] {
    @extend %slider-wrapper;

    > [class*='-slide'] {
      @extend %slider-slide;

      @for $i from 1 through $repeat {
        &:nth-child(#{length($bgColors)}n + #{$i}) {
          .cards {
            background: nth($bgColors, random(length($colors)));
          }
        }
      }
    }
  }
}

.swiper-pagination-bullets {
  @extend %slider-pagination;

  .swiper-pagination-bullet {
    @extend %slider-pagination-bullet;

    &-active {
      @extend %slider-pagination-bullet-active;
    }
  }
}
